openapi: 3.0.3
info:
  title: Merchant experience API
  version: 1.0.0
servers:
  - url: /v1/merchant
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      description: Api key for a namespace issued by talpa verkkokauppa
      in: header
      name: api-key
  schemas:
    ErrorBody:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: string
              message:
                type: string
    Configurations:
      type: object
      properties:
        merchantName:
          type: string
        merchantStreet:
          type: string
        merchantZip:
          type: string
        merchantCity:
          type: string
        merchantEmail:
          type: string
        merchantPhone:
          type: string
        merchantUrl:
          type: string
        merchantTermsOfServiceUrl:
          type: string
        merchantPaymentWebhookUrl:
          type: string
        merchantOrderWebhookUrl:
          type: string
        merchantSubscriptionWebhookUrl:
          type: string
        merchantSubscriptionTermsOfServiceUrl:
          type: string
        merchantBusinessId:
          type: string
        orderCreatedRedirectUrl:
          type: string
        orderCancelRedirectUrl:
          type: string
        subscriptionPriceUrl:
          type: string
        merchantRefundWebhookUrl:
          type: string
        merchantShopId:
          type: string
        orderPaymentFailedRedirectUrl:
          type: string
    MerchantConfigurations:
      type: object
      required:
        - merchantStreet
        - merchantZip
        - merchantCity
        - merchantEmail
        - merchantUrl
        - merchantTermsOfServiceUrl
        - merchantBusinessId
        - merchantShopId
        - merchantPaytrailMerchantId
      properties:
        merchantName:
          type: string
        merchantStreet:
          type: string
        merchantZip:
          type: string
        merchantCity:
          type: string
        merchantEmail:
          type: string
        merchantPhone: #Not required
          type: string
        merchantUrl:
          type: string
        merchantTermsOfServiceUrl:
          type: string
        merchantBusinessId:
          type: string
        merchantShopId:
          type: string
        merchantPaytrailMerchantId:
          type: string
    MerchantConfigurationsUpdateAll:
      type: object
      properties:
        merchantName:
          type: string
        merchantStreet:
          type: string
        merchantZip:
          type: string
        merchantCity:
          type: string
        merchantEmail:
          type: string
        merchantPhone:
          type: string
        merchantUrl:
          type: string
        merchantTermsOfServiceUrl:
          type: string
        merchantBusinessId:
          type: string
        merchantShopId:
          type: string
    Merchant:
      type: object
      properties:
        merchantId:
          type: string
        namespace:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        configurations:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
              restricted:
                type: boolean
    Merchants:
      type: object
      description: 'Object of objects containing merchants with index as key starting from 0, value of index "key" is merchant object itself'
      additionalProperties:
        $ref: '#/components/schemas/Merchant'
    AllConfigurationKeys:
      type: object
      properties:
        namespace:
          type: array
          items:
            type: string
            example:
              - "merchantOrderWebhookUrl // Desc: Webhook to the transaction service when the order is created or cancelled. The notification comes with the order id."
              - "merchantPaymentWebhookUrl // Desc: Webhook to transaction service when paid or payment cancelled. The notification comes with the payment id and the order id."
              - "merchantRefundWebhookUrl // Desc: TODO"
              - "merchantSubscriptionWebhookUrl // Desc: webhook to the transaction service when a subscription is created or canceled. The notification includes the subscription id and the order id, as well as the cancellationCause,(CUSTOMER_CANCELLED, EXPIRED, NO_RIGHT_OF_PURCHASE) information."
              - "merchantTermsOfServiceUrl // Desc: Appears in the summary under Order terms and on the receipt under cancellation instructions and conditions"
              - "orderCancelRedirectUrl // Desc: If specified, the Kassa-UI will return here if the order is canceled (ie before payment). In the query parameter orderId, the browser is told the ID of the order that was not paid for."
              - "orderRightOfPurchaseIsActive // Desc: Is the purchase right check on the interface on?"
              - "orderRightOfPurchaseUrl // Desc: The interface of the transaction service, from which the right to purchase the products of the order is checked, if specified on."
              - "orderSuccessRedirectUrl // Desc: Not yet in use; meaning that after payment, the receipt page would redirect here instead of merchantUrl (unless specified to return directly to the transaction service)?"
              - "subscriptionPriceUrl // Desc: The interface of the transaction service, from which the price of the subscription is checked, if value is not null."
        merchant:
          type: array
          items:
            type: string
            example:
              - "merchantCity // Desc: Appears on the receipt under Seller's information"
              - "merchantEmail // Desc: Appears on the receipt under Seller's information"
              - "merchantName // Desc: Appears on the receipt under Seller's information"
              - "merchantPhone // Desc: Appears on the receipt under Seller's information"
              - "merchantShopId // Desc: TODO"
              - "merchantStreet // Desc: Appears on the receipt under Seller's information"
              - "merchantTermsOfServiceUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "merchantUrl // Desc: Return address to the transaction service from the cashier of the online store. The receipt page is also returned here"
              - "merchantZip // Desc: Appears on the receipt under Seller's information"
              - "orderRightOfPurchaseIsActive // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "orderRightOfPurchaseUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "subscriptionPriceUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"
        platform:
          type: array
          items:
            type: string
            example:
              - "namespaceApiAccessToken"
              - "payment_api_key // Sub-merchant's api-key for Visma Pay interface calls from the online store."
              - "payment_submerchant_id // Sub-merchant information of the Visma Pay contract to which the order is assigned and which appears in the invoicing report."
              - "payment_api_version // Visma-api version"
              - "payment_currency // Payment currency Default (EUR)"
              - "payment_encryption_key // Sub-merchant's secret key to calculate HMAC."
              - "payment_notification_url // Webhook URL from Visma Pay to the online store. (Notify/Return Controller:s in payment-api)"
              - "payment_register_card_token"
              - "payment_return_url // Return address from Visma Pay to the online store in the browser."
              - "payment_type"
        merchant-can-override:
          type: array
          items:
            type: string
            example:
              - "merchantTermsOfServiceUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "orderRightOfPurchaseIsActive // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "orderRightOfPurchaseUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"
              - "subscriptionPriceUrl // Desc: Overrides namespace value (Read more about usage from namespace description)"

  responses:
    InvalidApiKey:
      description: Invalid api key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBody'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBody'
    RequestValidationFailed:
      description: Invalid request data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBody'
paths:
  /config/keys/list/{namespace}:
    parameters:
      - name: namespace
        in: path
        description: namespace
        required: true
        schema:
          type: string
    get:
      description: List of configuration keys in merchant,namespace and platform
      security:
        - ApiKey: [ ]
      responses:
        '200':
          description: An object of arrays containing configuration keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllConfigurationKeys'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /{namespace}/:
    parameters:
      - name: namespace
        in: path
        description: Merchant namespace
        required: true
        schema:
          type: string
    get:
      description: Get merchant configurations
      responses:
        '200':
          description: An object of merchant configurations
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchantName:
                    type: string
                  merchantStreet:
                    type: string
                  merchantZip:
                    type: string
                  merchantCity:
                    type: string
                  merchantEmail:
                    type: string
                  merchantPhone:
                    type: string
                  merchantUrl:
                    type: string
                  merchantTermsOfServiceUrl:
                    type: string
                  merchantPaymentWebhookUrl:
                    type: string
                  merchantOrderWebhookUrl:
                    type: string
                  merchantSubscriptionWebhookUrl:
                    type: string
                  merchantBusinessId:
                    type: string
                  orderCreatedRedirectUrl:
                    type: string
                  merchantShopId:
                    type: string
                  orderPaymentFailedRedirectUrl:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      description: Insert merchant configurations to service configurations
      security:
        - ApiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      responses:
        '201':
          description: An object of merchant configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configurations'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /{namespace}/{merchantId}:
    parameters:
      - name: namespace
        in: path
        description: Merchant namespace
        required: true
        schema:
          type: string
      - name: merchantId
        in: path
        description: Merchant Id
        required: true
        schema:
          type: string
    get:
      description: Get merchant configurations
      responses:
        '200':
          description: An object of merchant configurations
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchantName:
                    type: string
                  merchantStreet:
                    type: string
                  merchantZip:
                    type: string
                  merchantCity:
                    type: string
                  merchantEmail:
                    type: string
                  merchantPhone:
                    type: string
                  merchantUrl:
                    type: string
                  merchantTermsOfServiceUrl:
                    type: string
                  merchantPaymentWebhookUrl:
                    type: string
                  merchantOrderWebhookUrl:
                    type: string
                  merchantSubscriptionWebhookUrl:
                    type: string
                  merchantBusinessId:
                    type: string
                  orderCreatedRedirectUrl:
                    type: string
                  merchantShopId:
                    type: string
                  orderPaymentFailedRedirectUrl:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'

  /create/merchant/{namespace}:
    parameters:
      - name: namespace
        in: path
        description: Create new merchant and link it to given namespace
        required: true
        schema:
          type: string
    post:
      description: Create new merchant and link it to given namespace
      security:
        - ApiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConfigurations'
      responses:
        '201':
          description: An object of merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /update/merchant/{namespace}/{merchantId}:
    parameters:
      - name: namespace
        in: path
        description: Merchant namespace
        required: true
        schema:
          type: string
      - name: merchantId
        in: path
        description: Merchant id
        required: true
        schema:
          type: string
    post:
      description: Update merchant with given key value pairs
      security:
        - ApiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      responses:
        '200':
          description: An object of updated merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /list/merchants/{namespace}:
    parameters:
      - name: namespace
        in: path
        description: Merchants namespace
        required: true
        schema:
          type: string
    get:
      description: List merchants in given namespace
      security:
        - ApiKey: [ ]
      responses:
        '200':
          description: An array of merchants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchants'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /update/merchants/{namespace}:
    parameters:
      - name: namespace
        in: path
        description: Merchants namespace
        required: true
        schema:
          type: string
    post:
      description: Update values to all merchants in given namespace
      security:
        - ApiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConfigurationsUpdateAll'
      responses:
        '201':
          description: An array of merchants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchants'
        '400':
          $ref: '#/components/responses/RequestValidationFailed'
        '403':
          $ref: '#/components/responses/InvalidApiKey'
        '500':
          $ref: '#/components/responses/InternalServerError'
